# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# user nginx;
worker_processes auto;
error_log /nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

# include /etc/nginx/conf.d/server.conf;

http {
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    # include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
        listen 80;

        proxy_set_header   Host                $host;
        proxy_set_header   X-Real-IP           $remote_addr;
        proxy_set_header   X-Remote-Addr       $remote_addr;
        proxy_set_header   X-Forwarded-Host    $host;
        proxy_set_header   X-Forwarded-Server  $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        location = /auth {
            internal;
            set $memcached_key $cookie_sid;
            memcached_pass memcached:11211;
        }

        location ^~ /phpMyAdmin/ {
            proxy_pass http://phpmyadmin/;
        }

        location ^~ /login/ {
            proxy_pass http://ura/login/;
        }

        location ^~ /ura/ {
            #rewrite_by_lua '
            #        local res = ngx.location.capture("/auth")
            #        if res.status ~= 200 then
            #                return ngx.exec("/login/")
            #        end
            #';

            location /ura/ {
                proxy_pass http://ura/;
            }

            location /ura/Node/SampleChat/ {
                proxy_pass http://server:3001/;
            }

            location /ura/Node/Ping/ {
                proxy_pass http://server:3000/;
            }

            location /ura/Node/MathBattle/ {
                proxy_pass http://server:3002/;
            }

            location ~ ^/ura/([a-z]+)$ {
                rewrite ^/([a-z]+)$ /?app=$1 break;
                proxy_pass http://ura;
            }
        }

        location / {
            proxy_pass http://omote/;
        }
    }
}
